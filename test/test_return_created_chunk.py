# coding: utf-8

"""
    trieve-server

    Trieve REST API OpenAPI Documentation

    The version of the OpenAPI document: 1.0.0
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""  # noqa: E501


import unittest

from arguflow.models.return_created_chunk import ReturnCreatedChunk

class TestReturnCreatedChunk(unittest.TestCase):
    """ReturnCreatedChunk unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional) -> ReturnCreatedChunk:
        """Test ReturnCreatedChunk
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # uncomment below to create an instance of `ReturnCreatedChunk`
        """
        model = ReturnCreatedChunk()
        if include_optional:
            return ReturnCreatedChunk(
                chunk_metadata = arguflow.models.chunk_metadata.ChunkMetadata(
                    author_id = '', 
                    chunk_html = '', 
                    content = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    dataset_id = '', 
                    id = '', 
                    link = '', 
                    metadata = null, 
                    qdrant_point_id = '', 
                    tag_set = '', 
                    time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tracking_id = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    weight = 1.337, ),
                duplicate = True
            )
        else:
            return ReturnCreatedChunk(
                chunk_metadata = arguflow.models.chunk_metadata.ChunkMetadata(
                    author_id = '', 
                    chunk_html = '', 
                    content = '', 
                    created_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    dataset_id = '', 
                    id = '', 
                    link = '', 
                    metadata = null, 
                    qdrant_point_id = '', 
                    tag_set = '', 
                    time_stamp = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    tracking_id = '', 
                    updated_at = datetime.datetime.strptime('2013-10-20 19:20:30.00', '%Y-%m-%d %H:%M:%S.%f'), 
                    weight = 1.337, ),
                duplicate = True,
        )
        """

    def testReturnCreatedChunk(self):
        """Test ReturnCreatedChunk"""
        # inst_req_only = self.make_instance(include_optional=False)
        # inst_req_and_optional = self.make_instance(include_optional=True)

if __name__ == '__main__':
    unittest.main()
